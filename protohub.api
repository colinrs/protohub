syntax = "v1"

@server (
	prefix:     /api/v1/user
	middleware: Auth
	group:      user
)
service protohub-api {
	@handler Detail
	get /detail (UserDetailRequest) returns (UserDetailResponse)

	@handler RefreshAuthorization
	get /refresh/authorization (RefreshAuthorizationRequest) returns (RefreshAuthorizationResponse)
}

@server (
	prefix: /api/v1/user
	group:  user
)
service protohub-api {
	@handler Login
	post /login (LoginRequest) returns (LoginResponse)

	@handler Register
	post /register (UserRegisterRequest) returns (UserRegisterResponse)

	// 验证码发送
	@handler MailCodeSendRegister
	post /mail/code/send/register (MailCodeSendRequest) returns (MailCodeSendResponse)
}

@server (
	prefix: /api/v1/file
	group:  file
)
service protohub-api {
	@handler UploadHandler
	post /upload (FileUploadRequest) returns (FileUploadResponse)

	@handler DownloadHandler
	get /download (FileDownloadRequest)

	@handler List
	get /list (FileListRequest) returns (FileListResponse)

	@handler Detail
	get /detail (FileDetailRequest) returns (FileDetailResponse)
}

type BaseUUIDInfo {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

type UserInfo {
	BaseUUIDInfo
	// Status | 状态
	// max : 20
	Status *uint32 `json:"status,optional" validate:"omitempty,lt=20"`
	// Username | 用户名
	// max length : 50
	Username *string `json:"username,optional" validate:"omitempty,max=50"`
	// Nickname | 昵称
	// max length : 40
	Nickname *string `json:"nickname,optional" validate:"omitempty,max=40"`
	// Password | 密码
	// min length : 6
	Password *string `json:"password,optional" validate:"omitempty,min=6"`
	// Description | 描述
	// max length : 100
	Description *string `json:"description,optional" validate:"omitempty,max=100"`
	// HomePath | 首页
	// max length : 70
	HomePath *string `json:"homePath,optional" validate:"omitempty,max=70"`
	// RoleId | 角色ID
	RoleIds []uint64 `json:"roleIds,optional"`
	// Mobile | 手机号
	// max length : 18
	Mobile *string `json:"mobile,optional" validate:"omitempty,max=18"`
	// Email | 邮箱
	// max length : 80
	Email *string `json:"email,optional" validate:"omitempty,max=80"`
	// Avatar | 头像地址
	// max length : 300
	Avatar *string `json:"avatar,optional" validate:"omitempty,max=300"`
	// Department ID | 部门ID
	DepartmentId *uint64 `json:"departmentId,optional"`
	// Position ID | 职位ID
	PositionIds []uint64 `json:"positionId,optional"`
}

type UserRegisterRequest {
	// 用户名
	Name string `json:"name"`
	// 密码
	Password string `json:"password"`
	// 邮箱
	Email string `json:"email"`
	// 验证码
	Code string `json:"code"`
}

type UserRegisterResponse {}

// https://blog.csdn.net/weixin_43734095/article/details/124927942
type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type RefreshAuthorizationRequest {}

type RefreshAuthorizationResponse {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type UserDetailRequest {
	Identity string `form:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest {
	Email string `form:"identity"`
}

type MailCodeSendResponse {
	Code string `json:"code"`
}

type FileUploadRequest {
	ProjectName string `form:"project_name"`
	ServiceName string `form:"service_name"`
	Branch      string `form:"branch"`
	FileName    string `form:"file_name"`
	Creator     string `form:"creator"`
}

type FileUploadResponse {}

type FileDownloadRequest {
	FileID int `form:"file_id"`
}

type FileDownloadResponse {}

type FileListRequest {
	ProjectName string `form:"project_name"`
	ServiceName string `form:"service_name"`
}

type FileListData {
	ProjectName string `json:"project_name"`
	ServiceName string `json:"service_name"`
	Branch      string `json:"branch"`
	FileName    string `json:"file_name"`
	FileID      int    `json:"file_id"`
	Creator     string `json:"creator"`
	UpdateAt    string `json:"update_at"`
}

type FileListResponse {
	List  []*FileListData `json:"list"`
	Total int             `json:"total"`
}

type FileDetailRequest {
	FileID int `form:"file_id"`
}

type FileDetailResponse {
	ProjectName string `json:"project_name"`
	ServiceName string `json:"service_name"`
	Branch      string `json:"branch"`
	FileName    string `json:"file_name"`
	FileID      int    `json:"file_id"`
	Content     string `json:"content"`
	creator     string `json:"creator"`
	UpdateAt    string `json:"update_at"`
}

