// Code generated by goctl. DO NOT EDIT.
package types

type BaseUUIDInfo struct {
	Id        *string `json:"id,optional"`
	CreatedAt *int64  `json:"createdAt,optional"`
	UpdatedAt *int64  `json:"updatedAt,optional"`
}

type FileDetailRequest struct {
	FileID int `form:"file_id"`
}

type FileDetailResponse struct {
	ProjectName string `json:"project_name"`
	ServiceName string `json:"service_name"`
	Branch      string `json:"branch"`
	FileName    string `json:"file_name"`
	FileID      int    `json:"file_id"`
	Content     string `json:"content"`
	Creator     string `json:"creator"`
	UpdateAt    string `json:"update_at"`
}

type FileDownloadRequest struct {
	FileID int `form:"file_id"`
}

type FileDownloadResponse struct {
}

type FileListData struct {
	ProjectName string `json:"project_name"`
	ServiceName string `json:"service_name"`
	Branch      string `json:"branch"`
	FileName    string `json:"file_name"`
	FileID      int    `json:"file_id"`
	Creator     string `json:"creator"`
	UpdateAt    string `json:"update_at"`
}

type FileListRequest struct {
	ProjectName string `form:"project_name"`
	ServiceName string `form:"service_name"`
}

type FileListResponse struct {
	List  []*FileListData `json:"list"`
	Total int             `json:"total"`
}

type FileUploadRequest struct {
	ProjectName string `form:"project_name"`
	ServiceName string `form:"service_name"`
	Branch      string `form:"branch"`
	FileName    string `form:"file_name"`
	Creator     string `form:"creator"`
}

type FileUploadResponse struct {
}

type LoginRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type MailCodeSendRequest struct {
	Email string `form:"identity"`
}

type MailCodeSendResponse struct {
	Code string `json:"code"`
}

type RefreshAuthorizationRequest struct {
}

type RefreshAuthorizationResponse struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type UserDetailRequest struct {
	Identity string `form:"identity"`
}

type UserDetailResponse struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type UserInfo struct {
	BaseUUIDInfo
	Status       *uint32  `json:"status,optional" validate:"omitempty,lt=20"`
	Username     *string  `json:"username,optional" validate:"omitempty,max=50"`
	Nickname     *string  `json:"nickname,optional" validate:"omitempty,max=40"`
	Password     *string  `json:"password,optional" validate:"omitempty,min=6"`
	Description  *string  `json:"description,optional" validate:"omitempty,max=100"`
	HomePath     *string  `json:"homePath,optional" validate:"omitempty,max=70"`
	RoleIds      []uint64 `json:"roleIds,optional"`
	Mobile       *string  `json:"mobile,optional" validate:"omitempty,max=18"`
	Email        *string  `json:"email,optional" validate:"omitempty,max=80"`
	Avatar       *string  `json:"avatar,optional" validate:"omitempty,max=300"`
	DepartmentId *uint64  `json:"departmentId,optional"`
	PositionIds  []uint64 `json:"positionId,optional"`
}

type UserRegisterRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterResponse struct {
}
